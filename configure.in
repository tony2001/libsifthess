dnl this files has to be processed by autoconf
AC_PREREQ(2.61)

AC_INIT([libsifthess],[0.1.0])
AC_CONFIG_SRCDIR([README])
AC_CONFIG_SRCDIR(include/sift.h)
AC_CONFIG_HEADERS(include/sifthess_config.h)
AM_INIT_AUTOMAKE([no-define])
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LD

dnl we don't need C++ compiler
undefine([AC_PROG_CXX])
AC_DEFUN([AC_PROG_CXX], [])
undefine([AC_PROG_CXXCPP])
AC_DEFUN([AC_PROG_CXXCPP], [dummy_cxxcpp=disabled])

AM_PROG_LIBTOOL
AC_PROG_INSTALL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

dnl Checks for header files.
AC_CHECK_HEADERS(string.h strings.h unistd.h stdint.h)

MAJOR_VERSION=0
MINOR_VERSION=1
BUGFIX_VERSION=0
EXTRA_VERSION="-dev"

SIFTHESS_VERSION_TEXT="${MAJOR_VERSION}.${MINOR_VERSION}.${BUGFIX_VERSION}${EXTRA_VERSION}"
SIFTHESS_VERSION_ID=`expr [$]MAJOR_VERSION \* 10000 + [$]MINOR_VERSION \* 100 + [$]BUGFIX_VERSION`

STANDARD_PREFIXES="/usr /usr/local /opt /local"

dnl generate sifthess_version.h {{{
echo "/* automatically generated by configure */" > sifthess_version.h.new
echo "/* edit configure.in to change the version number */" >> sifthess_version.h.new
echo "#define SIFTHESS_MAJOR_VERSION $MAJOR_VERSION" >> sifthess_version.h.new
echo "#define SIFTHESS_MINOR_VERSION $MINOR_VERSION" >> sifthess_version.h.new
echo "#define SIFTHESS_BUGFIX_VERSION $BUGFIX_VERSION" >> sifthess_version.h.new
echo "#define SIFTHESS_EXTRA_VERSION \"$EXTRA_VERSION\"" >> sifthess_version.h.new
echo "#define SIFTHESS_VERSION_TEXT \"$SIFTHESS_VERSION_TEXT\"" >> sifthess_version.h.new
echo "#define SIFTHESS_VERSION_ID $SIFTHESS_VERSION_ID" >> sifthess_version.h.new
cmp sifthess_version.h.new $srcdir/src/sifthess_version.h >/dev/null 2>&1
if test $? -ne 0 ; then
  rm -f $srcdir/src/sifthess_version.h && mv sifthess_version.h.new $srcdir/src/sifthess_version.h && \
  echo 'Updated src/sifthess_version.h'
else
  rm -f sifthess_version.h.new
fi
dnl }}}

DEFAULT_INSTALL_PREFIX="/usr/local"

dnl {{{ --with-libdir
AC_ARG_WITH(libdir,
  [AS_HELP_STRING([--with-libdir],[look for libraries in .../NAME rather than .../lib])
  ],
  [LIBDIR=$with_libdir],
  [LIBDIR=lib]
)
dnl }}}

dnl {{{ --disable-rpath
AC_ARG_ENABLE(rpath,
  [AS_HELP_STRING([--disable-rpath],[disable passing additional runtime library search paths])
  ],
  [SIFTHESS_RPATH=no],
  [SIFTHESS_RPATH=yes]
)
dnl }}}

dnl {{{ check for rpath support
AC_MSG_CHECKING([if compiler supports -R])
AC_CACHE_VAL(sifthess_cv_cc_dashr,[
  SAVE_LIBS=$LIBS
  LIBS="-R /usr/$LIBDIR $LIBS"
  AC_TRY_LINK([], [], sifthess_cv_cc_dashr=yes, sifthess_cv_cc_dashr=no)
  LIBS=$SAVE_LIBS])
AC_MSG_RESULT([$sifthess_cv_cc_dashr])
if test $sifthess_cv_cc_dashr = "yes"; then
  ld_runpath_switch=-R
else
  AC_MSG_CHECKING([if compiler supports -Wl,-rpath,])
  AC_CACHE_VAL(sifthess_cv_cc_rpath,[
    SAVE_LIBS=$LIBS
    LIBS="-Wl,-rpath,/usr/$LIBDIR $LIBS"
    AC_TRY_LINK([], [], sifthess_cv_cc_rpath=yes, sifthess_cv_cc_rpath=no)
    LIBS=$SAVE_LIBS])
  AC_MSG_RESULT([$sifthess_cv_cc_rpath])
  if test $sifthess_cv_cc_rpath = "yes"; then
    ld_runpath_switch=-Wl,-rpath,
  else
    ld_runpath_switch=-L
  fi
fi
if test "$SIFTHESS_RPATH" = "no"; then
  ld_runpath_switch=
fi
dnl }}}

dnl {{{ --with-opencv
AC_ARG_WITH(opencv,
  [AS_HELP_STRING([--with-opencv],[specify OpenCV install prefix])
  ],
  [ ],
  [with_opencv=yes]
)

if test "x$with_opencv" = "xno"; then
  AC_MSG_ERROR([can't continue without OpenCV])
else
  AC_MSG_CHECKING([OpenCV install prefix])

  if test "x$with_opencv" = "xyes"; then
    for i in `echo "$STANDARD_PREFIXES"`; do
      if test -f "$i/include/opencv/cv.h"; then
        OPENCV_DIR="$i"
        break;
      fi
    done
  else

    with_opencv=`dir_resolve "$with_opencv"`

    if test -f "$with_opencv/include/opencv/cv.h"; then
      OPENCV_DIR="$with_opencv"
    else
      AC_MSG_ERROR([Can't find OpenCV headers under $with_opencv directory]);
    fi
  fi

  if test "x$OPENCV_DIR" = "x"; then
    AC_MSG_ERROR([Unable to locate OpenCV headers, please use --with-opencv=<DIR>]);
  fi

  AC_MSG_RESULT([$OPENCV_DIR])
  LDFLAGS="$LDFLAGS -L$OPENCV_DIR/$LIBDIR"
  LIBS="$LIBS -lopencv_imgproc -lopencv_core"
  CXXFLAGS="$CXXFLAGS -I$OPENCV_DIR/include/opencv"
  CFLAGS="$CFLAGS -I$OPENCV_DIR/include/opencv"

  if test "$SIFTHESS_RPATH" != "no"; then
    LDFLAGS="$LDFLAGS $ld_runpath_switch$OPENCV_DIR/$LIBDIR"
  fi
fi
dnl }}}

dnl {{{ --enable-debug
AC_ARG_ENABLE(debug,
  [AS_HELP_STRING([--enable-debug],[enable debugging symbols and compile flags])
  ],
  [
    if test x"$enableval" = xyes ; then
      debug="yes"
    else
      debug="no"
    fi
  ]
)

if test x"$debug" = xyes ; then
  AC_DEFINE([SIFTHESS_DEBUG], [], [debug build])

  if test x"$GCC" = xyes; then

    dnl Remove any optimization flags from CFLAGS
    changequote({,})
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-O[0-9s]*//g'`
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-g[0-2]\? //g'`
    changequote([,])
    CFLAGS="$CFLAGS -g3 -Wall -O0"

  fi

  dnl Do not strip symbols from developer object files.
  INSTALL_STRIP_FLAG=""
else
  dnl Make sure to strip symbols from non-developer object files.
  INSTALL_STRIP_FLAG="-s"
fi
dnl }}}

dnl {{{ --enable-examples
AC_ARG_ENABLE(examples,
  [AS_HELP_STRING([--enable-examples],[enable building example binaries (requires GTK2)])
  ],
  [
    if test x"$enableval" = xyes ; then
      examples="yes"
    else
      examples="no"
    fi
  ]
)

if test x"$examples" = xyes ; then
  AC_DEFINE([SIFTHESS_EXAMPLES], [], [build examples])
  PKG_CHECK_MODULES(GTK, [gtk+-2.0], HAVE_GTK="yes", HAVE_GTK="no")
  PKG_CHECK_MODULES(GTK_ENGINES_2, [gtk-engines-2], HAVE_GTK_ENGINES="yes", HAVE_GTK_ENGINES="no")
  AC_SUBST(GTK_ENGINES_2_CFLAGS)
  AC_SUBST(GTK_ENGINES_2_LIBS)
  ADD_OPENCV_LIBS="$LIBS -lopencv_highgui"
  AC_SUBST(ADD_OPENCV_LIBS)
fi

AM_CONDITIONAL([BUILD_EXAMPLES], [test x"$examples" = xyes])
dnl }}}

AC_SUBST(INSTALL_STRIP_FLAG)

AC_CONFIG_FILES([Makefile src/Makefile include/Makefile])
AC_OUTPUT

